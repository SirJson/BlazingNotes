{
  "createdAt": "2018-11-01T19:15:43.098Z",
  "updatedAt": "2018-11-09T15:11:53.333Z",
  "type": "MARKDOWN_NOTE",
  "folder": "c437ee5aa512409d438f",
  "title": "Coming Up with Programming Projects You Actually Care About",
  "content": "# Coming Up with Programming Projects You Actually Care About\n\n\nLesezeit: _5-6 Minuten_\n\n-----\n\nThe best way to learn is often to do, to work on real-world projects. If\nyou want to learn HTML and CSS, build a simple website. If you want to\nlearn to play piano, commit to playing a song at an upcoming recital. If\nyou want to learn about regime change, make some molotov cocktails.\n\nRemember though that taking action is not the first step. Rather, the\nfirst step is deciding what to take action on. And this decision can\nmake all the difference.\n\nFor example, letÔÇÖs say you want to learn to make websites. You donÔÇÖt\nhave an idea in mind, but someone suggests that you make a clone of some\npopular site, say Reddit for instance. You shrug, ÔÇ£sure that sounds\nfine,ÔÇØ and start working on it. How long do you think this lasts? Sure,\nyou might be lucky enough to make some progress the first weekend if\nthereÔÇÖs nothing going on. But as soon as you get swamped at the office,\nor get sick, or life decides to throw any number of other obstacles at\nyou, youÔÇÖre going to drop that project like a guillotine blade in 1790s\nFrance. Why? Because you donÔÇÖt actually care about it.\n\nSure, itÔÇÖs *possible* that youÔÇÖre so driven to learn about websites that\nany project will do. But most of us need something more meaningful to\ncarry us through the storm of everyday bullshit. What do I mean by\nmeaningful? When it comes to personal programming projects, especially\nbeginner-to-intermediate ones, this generally boils down to two\nqualities: *useful* and *fun*. ThereÔÇÖs a lot of overlap here, but the\nbrainstorming process can be a little different for each.\n\nIn brainstorming ideas for both of these types of projects, youÔÇÖll want\nto be able to note down everything that comes to mind. DonÔÇÖt spend any\neffort judging your ideas at this point, youÔÇÖll do that later. Just let\nit flow.\n\n![half-machine-half-organic-brain.jpg](:storage\\c75c9400-b5c5-445e-9c19-2f2d944c405f\\f3c47ca3.jpg)\n\n## Useful Projects\n\nAn obedient machine that does your work is a beautiful thing to behold.\nHereÔÇÖs a simple process that can help you think of useful ways to bend\nyour computer to your will:\n\nTo start, take a look at your to-do list, physical or mental. With\neverything on there, ask yourself if thereÔÇÖs any way a computer could do\nit, or just a part of it, even if it would require some extra hardware\nto allow your program to interact with the world. Simple and repetitive\ntasks are often good candidates, but donÔÇÖt necessarily restrict yourself\nto those either. Online shopping, watering plants, scheduling, and a\nmillion other things are all fair game here. Get creative.\n\nNext, close your eyes and walk through a recent day you had from start\nto finish. Again, with everything you did, stop for a moment and\nconsider whether it might be possible for a computer to do that for you.\nComb your entire day from morning to work to bed. If youÔÇÖre employed,\nIÔÇÖd encourage you to give some extra focus to your work day. Even if\nyouÔÇÖre not a professional programmer, and perhaps especially so,\nprogramming can make a big difference in your career. Programs that are\nuseful to your employer are also useful for justifying raises and\npromotions.\n\nFinally, expand the search even further by going through your\ncalendar/planner for the past few weeks or months and again give some\nthought to each item.\n\n## Fun Projects\n\nStart by writing down all your hobbies, interests, and skills, anything\nyou do when you have some free time. Then for each item on your list,\nagain try and imagine a programming project that could somehow relate to\nthe given topic.\n\nIf you love platformer video games, then perhaps making your own 2D\nplatformer with [pygame](https://www.pygame.org/news) would be a good\noption. If youÔÇÖre a prankster, there are no end to elaborate\ncomputer-related pranks you can pull. If you play fantasy sports, maybe\ntry and write a program that manages your fantasy teams for you.\n\nThis process is very open-ended and takes even more creativity than last\nsection. You might find it helpful to take an initial pass at\nbrainstorming followed by some unfocused, diffuse-mode activity, like\ngoing for a walk, that will allow your subconscious mind to chew on the\nproblem. Then run through the list again and see if anything novel comes\nto mind.\n\n## Picking Your Project\n\nNow that youÔÇÖve got your two lists of ideas, itÔÇÖs time to review them.\nNarrow them down to your top five or ten and then pick just one that you\nwill focus on for now, whichever one interests you the most. And if you\nget a little ways into it and discover that the project wonÔÇÖt be\nfeasible for you at the moment or isnÔÇÖt as fun or useful as you first\nthought, you can just return to your list and pick another.\n\nBe on the lookout for any ideas that appear on both lists. A project\nthat is both useful and fun to you personally is probably a winner.\n\nOf course, even with the above processes at your disposal, itÔÇÖs often\nuseful to see some example ideas that allow you to get a feel for whatÔÇÖs\npossible. So if youÔÇÖre interested in Python and automation-related\nprojects, consider checking out the free Ebook you get can get by\nsubscribing below. In any event, happy coding.\n\n___\n\nQuelle: Data Rebellion",
  "tags": [],
  "isStarred": false,
  "isTrashed": false
}
